"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[943],{8303:function(e,t,a){a.d(t,{P:function(){return r},V:function(){return o}});let o={API_BASE_URL:"https://api.influmojo.com",GOOGLE_CLIENT_ID:"your_google_client_id_here",APP_NAME:"Influ Mojo",APP_VERSION:"1.0.0",NODE_ENV:"production",IS_PRODUCTION:!0,IS_DEVELOPMENT:!1},r={LOGIN:"".concat(o.API_BASE_URL,"/api/auth/login"),SIGNUP:"".concat(o.API_BASE_URL,"/api/auth/signup"),GOOGLE_AUTH:"".concat(o.API_BASE_URL,"/api/auth/google"),FACEBOOK_AUTH:"".concat(o.API_BASE_URL,"/api/auth/facebook"),SEND_OTP:"".concat(o.API_BASE_URL,"/api/auth/send-phone-verification-code"),VERIFY_OTP:"".concat(o.API_BASE_URL,"/api/auth/verify-phone-code"),RESEND_OTP:"".concat(o.API_BASE_URL,"/api/auth/resend-otp"),LOGOUT:"".concat(o.API_BASE_URL,"/api/auth/logout"),UPDATE_NAME:"".concat(o.API_BASE_URL,"/api/auth/update-name"),USER_PROFILE:"".concat(o.API_BASE_URL,"/api/auth/profile"),CHECK_USER_EXISTS:"".concat(o.API_BASE_URL,"/api/auth/check-user-exists"),CREATE_MISSING_PROFILES:"".concat(o.API_BASE_URL,"/api/auth/create-missing-profiles"),GET_PROFILE:"".concat(o.API_BASE_URL,"/api/profile"),UPDATE_PROFILE:"".concat(o.API_BASE_URL,"/api/profile/update"),UPLOAD_IMAGE:"".concat(o.API_BASE_URL,"/api/profile/upload-image"),GET_BRAND_PROFILE:"".concat(o.API_BASE_URL,"/api/profile/brand-profile"),GET_CREATOR_PROFILE:"".concat(o.API_BASE_URL,"/api/profile/creator-profile"),GET_INDUSTRIES:"".concat(o.API_BASE_URL,"/api/profile/industries"),UPDATE_BASIC_INFO:"".concat(o.API_BASE_URL,"/api/profile/update-basic-info"),UPDATE_PREFERENCES:"".concat(o.API_BASE_URL,"/api/profile/update-preferences"),UPDATE_COVER_IMAGE:"".concat(o.API_BASE_URL,"/api/profile/update-cover-image"),GET_PACKAGES:"".concat(o.API_BASE_URL,"/api/profile/packages"),CREATE_PACKAGE:"".concat(o.API_BASE_URL,"/api/profile/create-package"),UPDATE_PACKAGE:"".concat(o.API_BASE_URL,"/api/profile/update-package"),DELETE_PACKAGE:"".concat(o.API_BASE_URL,"/api/profile/delete-package"),CREATE_PORTFOLIO:"".concat(o.API_BASE_URL,"/api/profile/create-portfolio"),CREATE_CAMPAIGN:"".concat(o.API_BASE_URL,"/api/profile/create-campaign"),SUBMIT_KYC:"".concat(o.API_BASE_URL,"/api/profile/submit-kyc"),CREATE_ORDER:"".concat(o.API_BASE_URL,"/api/orders"),GET_ORDERS:"".concat(o.API_BASE_URL,"/api/orders"),GET_ORDER_DETAILS:"".concat(o.API_BASE_URL,"/api/orders"),CHECKOUT_ORDERS:"".concat(o.API_BASE_URL,"/api/orders/checkout"),GET_BRAND_ORDERS:"".concat(o.API_BASE_URL,"/api/orders"),GET_CREATOR_ORDERS:"".concat(o.API_BASE_URL,"/api/orders"),UPDATE_ORDER_STATUS:"".concat(o.API_BASE_URL,"/api/orders/status"),SUBMIT_DELIVERABLES:"".concat(o.API_BASE_URL,"/api/orders"),GET_CREATORS:"".concat(o.API_BASE_URL,"/api/profile/creators"),GET_CREATOR_PROFILE_BY_ID:"".concat(o.API_BASE_URL,"/api/profile/creators"),ADD_TO_CART:"".concat(o.API_BASE_URL,"/api/cart/add"),GET_CART:"".concat(o.API_BASE_URL,"/api/cart"),REMOVE_FROM_CART:"".concat(o.API_BASE_URL,"/api/cart/remove"),UPDATE_CART_ITEM:"".concat(o.API_BASE_URL,"/api/cart/update"),GET_TICKET_MESSAGES:"".concat(o.API_BASE_URL,"/api/crm/tickets"),SEND_TICKET_MESSAGE:"".concat(o.API_BASE_URL,"/api/crm/tickets"),GET_TICKET_BY_ORDER:"".concat(o.API_BASE_URL,"/api/crm/tickets/order"),UPDATE_TICKET_STATUS:"".concat(o.API_BASE_URL,"/api/crm/tickets"),UPDATE_AGENT_STATUS:"".concat(o.API_BASE_URL,"/api/crm/agent/status"),GET_AGENT_STATUS:"".concat(o.API_BASE_URL,"/api/crm/tickets")}},2943:function(e,t,a){a.d(t,{$8:function(){return E},BB:function(){return P},authAPI:function(){return A},ordersAPI:function(){return T},profileAPI:function(){return S},ts:function(){return u}});var o=a(8303),r=a(257);let c=e=>{if("string"!=typeof e)return!1;try{let t=JSON.parse(e);return"object"==typeof t||Array.isArray(t)}catch(e){return!1}},n=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(!e)return t;if("object"==typeof e&&null!==e)return e;if(!c(e))return t;try{return JSON.parse(e)}catch(a){return console.warn("Failed to parse JSON:",e),t}},i=()=>localStorage.getItem("token"),s=e=>{localStorage.setItem("token",e)},l=()=>{localStorage.removeItem("token")},_=()=>{let e=localStorage.getItem("token");if(!e)return!1;if(3!==e.split(".").length)return console.error("[apiService] Invalid token format"),l(),!1;try{let t=JSON.parse(atob(e.split(".")[1])),a=Math.floor(Date.now()/1e3);if(t.exp&&t.exp<a)return console.error("[apiService] Token expired"),d(),!1;return!0}catch(e){return console.error("[apiService] Token validation error:",e),l(),!1}},E=()=>_(),d=()=>{console.log("[apiService] Token expired, redirecting to login"),l(),alert("Your session has expired. Please sign in again."),window.location.href="/login"},u=()=>{let e=localStorage.getItem("token");if(!e)return null;try{let t=JSON.parse(atob(e.split(".")[1]));return{id:t.userId||t.id,email:t.email,user_type:t.user_type}}catch(e){return console.error("[apiService] Error parsing user from token:",e),null}},P=async()=>{try{let e=await fetch("".concat(r.env.NEXT_PUBLIC_API_BASE_URL||"http://localhost:3002","/api/health"),{method:"GET",headers:{"Content-Type":"application/json"}});if(e.ok)return console.log("[apiService] Backend health check: OK"),!0;return console.error("[apiService] Backend health check: Failed with status",e.status),!1}catch(e){return console.error("[apiService] Backend health check: Network error",e),!1}},p=async function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!_())throw Error("Authentication token is invalid or expired. Please sign in again.");let a=i(),o={"Content-Type":"application/json",...a&&{Authorization:"Bearer ".concat(a)}},r={...t,headers:{...o,...t.headers}};try{let t;let a=await fetch(e,r),o=a.headers.get("content-type"),c=await a.text();if(o&&o.includes("application/json"))try{t=JSON.parse(c)}catch(e){throw console.error("[apiService] JSON parse error:",e),Error("Invalid JSON response: ".concat(c.substring(0,100)))}else throw Error("Non-JSON response: ".concat(c.substring(0,100)));if(401===a.status||403===a.status)throw console.error("[apiService] Authentication error:",a.status,t),l(),console.log("[apiService] Redirecting to login due to authentication error"),setTimeout(()=>{window.location.href="/login"},100),Error("Authentication failed: ".concat(t.message||"Unauthorized"));if(!a.ok)throw Error(t.message||"HTTP error! status: ".concat(a.status));return t}catch(e){if(console.error("[apiService] Request failed:",e),e instanceof TypeError&&e.message.includes("fetch"))throw console.error("[apiService] Network error - backend may be unavailable"),Error("Network error: Unable to connect to the server. Please check your internet connection and try again.");throw e}},A={login:async(e,t)=>{let a=await p(o.P.LOGIN,{method:"POST",body:JSON.stringify({email:e,password:t})});return a.token&&s(a.token),a},signup:async e=>{let t=await p(o.P.SIGNUP,{method:"POST",body:JSON.stringify(e)});return t.token&&s(t.token),t},googleAuth:async function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"creator";console.log("\uD83D\uDD04 Google auth API called with:",{isSignup:t,userType:a}),console.log("\uD83D\uDD11 ID token preview:",e.substring(0,50)+"...");try{let r={idToken:e,isSignup:t,userType:a};console.log("\uD83D\uDCE4 Request body:",r),console.log("\uD83C\uDF10 API endpoint:",o.P.GOOGLE_AUTH);let c=await fetch(o.P.GOOGLE_AUTH,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(r)});if(console.log("\uD83D\uDD0D Google auth response status:",c.status),console.log("\uD83D\uDD0D Google auth response headers:",c.headers),!c.ok){let e=await c.json().catch(()=>({}));throw console.error("❌ Google auth failed:",e),Error(e.message||"HTTP error! status: ".concat(c.status))}let n=await c.json();if(console.log("✅ Google auth successful:",n),n.token){console.log("\uD83D\uDD11 Storing JWT token from Google auth"),s(n.token);let e=localStorage.getItem("token");console.log("\uD83D\uDD0D Token stored successfully:",e?"Yes":"No")}else console.warn("⚠️ No token received in Google auth response");return n}catch(e){throw console.error("❌ Google auth request failed:",e),e}},sendOTP:async e=>await p(o.P.SEND_OTP,{method:"POST",body:JSON.stringify({phone:e})}),verifyOTP:async function(e,t,a){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"creator",c=await p(o.P.VERIFY_OTP,{method:"POST",body:JSON.stringify({phone:e,code:t,fullName:a,userType:r})});if(c.token){console.log("\uD83D\uDD11 Storing token in localStorage:",c.token.substring(0,20)+"..."),s(c.token);let e=localStorage.getItem("token");console.log("\uD83D\uDD0D Token stored successfully:",e?"Yes":"No"),e&&console.log("\uD83D\uDD0D Stored token preview:",e.substring(0,20)+"...")}else console.warn("⚠️ No token received in OTP verification response");return c},checkUserExists:async e=>await p(o.P.CHECK_USER_EXISTS,{method:"POST",body:JSON.stringify({phone:e})}),logout:async()=>{try{await p(o.P.LOGOUT,{method:"POST"})}catch(e){console.error("Logout error:",e)}finally{l()}},getProfile:async()=>await p(o.P.USER_PROFILE),getUserProfile:async()=>await p(o.P.USER_PROFILE),createMissingProfiles:async()=>{console.log("\uD83D\uDD04 createMissingProfiles called");let e=localStorage.getItem("token");return console.log("\uD83D\uDD0D Token available for createMissingProfiles:",e?"Yes":"No"),e&&console.log("\uD83D\uDD0D Token preview:",e.substring(0,20)+"..."),await p(o.P.CREATE_MISSING_PROFILES,{method:"POST"})}},S={getProfile:async()=>await p(o.P.GET_PROFILE,{method:"GET"}),getCreatorProfile:async()=>{let e=await p(o.P.GET_CREATOR_PROFILE,{method:"GET"});return e.success&&e.data&&(e.data.languages=n(e.data.languages,[]),e.data.content_categories=n(e.data.content_categories,[]),e.data.social_media_accounts=n(e.data.social_media_accounts,[]),e.data.portfolio_items=n(e.data.portfolio_items,[])),e},getBrandProfile:async()=>{let e=await p("".concat(o.P.GET_BRAND_PROFILE,"?_t=").concat(Date.now()),{method:"GET"});return e.success&&e.data&&(e.data.industries=n(e.data.industries,[]),e.data.languages=n(e.data.languages,[]),e.data.campaigns=n(e.data.campaigns,[]),e.data.collaborations=n(e.data.collaborations,[]),e.data.portfolio_items=n(e.data.portfolio_items,[])),e},getCreators:async()=>{let e=await p(o.P.GET_CREATORS,{method:"GET"});return e.success&&e.data&&Object.keys(e.data).forEach(t=>{e.data[t]&&Array.isArray(e.data[t])&&e.data[t].forEach(e=>{e.languages=n(e.languages,[]),e.content_categories=n(e.content_categories,[]),e.social_media_accounts=n(e.social_media_accounts,[]),e.portfolio_items=n(e.portfolio_items,[])})}),e},getPublicCreators:async()=>{try{let e;let t=await fetch(o.P.GET_CREATORS,{method:"GET",headers:{"Content-Type":"application/json"}}),a=t.headers.get("content-type"),r=await t.text();if(a&&a.includes("application/json"))try{e=JSON.parse(r)}catch(e){throw console.error("[apiService] JSON parse error:",e),Error("Invalid JSON response: ".concat(r.substring(0,100)))}else throw Error("Non-JSON response: ".concat(r.substring(0,100)));if(!t.ok)throw Error(e.message||"HTTP error! status: ".concat(t.status));return e.success&&e.data&&Object.keys(e.data).forEach(t=>{e.data[t]&&Array.isArray(e.data[t])&&e.data[t].forEach(e=>{e.languages=n(e.languages,[]),e.content_categories=n(e.content_categories,[]),e.social_media_accounts=n(e.social_media_accounts,[]),e.portfolio_items=n(e.portfolio_items,[])})}),e}catch(e){throw console.error("[apiService] Public creators request failed:",e),e}},getCreatorProfileById:async(e,t)=>{let a=t?"".concat(o.P.GET_CREATOR_PROFILE_BY_ID,"/").concat(t,"/").concat(e):"".concat(o.P.GET_CREATOR_PROFILE_BY_ID,"/").concat(e),r=await p(a,{method:"GET"});return r.success&&r.data&&(r.data.languages=n(r.data.languages,[]),r.data.content_categories=n(r.data.content_categories,[]),r.data.social_media_accounts=n(r.data.social_media_accounts,[]),r.data.portfolio_items=n(r.data.portfolio_items,[])),r},getPublicCreatorProfileById:async e=>{try{let t;let a="".concat(o.P.GET_CREATOR_PROFILE_BY_ID,"/").concat(e),r=await fetch(a,{method:"GET",headers:{"Content-Type":"application/json"}}),c=r.headers.get("content-type"),i=await r.text();if(c&&c.includes("application/json"))try{t=JSON.parse(i)}catch(e){throw console.error("[apiService] JSON parse error:",e),Error("Invalid JSON response: ".concat(i.substring(0,100)))}else throw Error("Non-JSON response: ".concat(i.substring(0,100)));if(!r.ok)throw Error(t.message||"HTTP error! status: ".concat(r.status));return t.success&&t.data&&(t.data.languages=n(t.data.languages,[]),t.data.content_categories=n(t.data.content_categories,[]),t.data.social_media_accounts=n(t.data.social_media_accounts,[]),t.data.portfolio_items=n(t.data.portfolio_items,[])),t}catch(e){throw console.error("[apiService] Public creator profile request failed:",e),e}},updateProfile:async e=>await p(o.P.UPDATE_PROFILE,{method:"PUT",body:JSON.stringify(e)}),addToCart:async function(e,t){let a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return await p(o.P.ADD_TO_CART,{method:"POST",body:JSON.stringify({package_id:e,creator_id:t,quantity:a})})},getCart:async()=>await p(o.P.GET_CART),removeFromCart:async e=>await p(o.P.REMOVE_FROM_CART,{method:"DELETE",body:JSON.stringify({cart_item_id:e})}),updateCartItemQuantity:async(e,t)=>await p(o.P.UPDATE_CART_ITEM,{method:"PUT",body:JSON.stringify({cart_item_id:e,quantity:t})}),getPackages:async()=>await p(o.P.GET_PACKAGES,{method:"GET"}),createPackage:async e=>await p(o.P.CREATE_PACKAGE,{method:"POST",body:JSON.stringify(e)}),updatePackage:async(e,t)=>{let a={id:e,...t};return await p(o.P.UPDATE_PACKAGE,{method:"PUT",body:JSON.stringify(a)})},deletePackage:async e=>await p("".concat(o.P.DELETE_PACKAGE,"/").concat(e),{method:"DELETE"}),createPortfolio:async e=>await p(o.P.CREATE_PORTFOLIO,{method:"POST",body:JSON.stringify(e)}),createCampaign:async e=>await p(o.P.CREATE_CAMPAIGN,{method:"POST",body:JSON.stringify(e)}),submitKYC:async e=>await p(o.P.SUBMIT_KYC,{method:"POST",body:JSON.stringify(e)}),updateBasicInfo:async e=>await p(o.P.UPDATE_BASIC_INFO,{method:"POST",body:JSON.stringify(e)}),updatePreferences:async e=>await p(o.P.UPDATE_PREFERENCES,{method:"POST",body:JSON.stringify(e)}),getIndustries:async()=>await p(o.P.GET_INDUSTRIES,{method:"GET"})},T={getOrders:async()=>await p(o.P.GET_ORDERS,{method:"GET"}),getOrderDetails:async e=>await p("".concat(o.P.GET_ORDER_DETAILS,"/").concat(e),{method:"GET"}),checkoutOrders:async e=>await p(o.P.CHECKOUT_ORDERS,{method:"POST",body:JSON.stringify({cartItems:e})}),submitDeliverables:async(e,t)=>await p("".concat(o.P.GET_ORDERS,"/").concat(e,"/deliverables"),{method:"POST",body:JSON.stringify({deliverables:t})}),acceptOrder:async e=>{if(!e||"undefined"===e||"null"===e)throw Error("Invalid order ID provided");try{let t=await p("".concat(o.P.GET_ORDERS,"/").concat(e,"/accept"),{method:"PUT"});if(!t.success)throw Error(t.message||"Failed to accept order");return t}catch(e){throw console.error("[apiService] Error accepting order:",e),Error(e&&"object"==typeof e&&"message"in e?String(e.message):"Failed to accept order. Please try again.")}},rejectOrder:async(e,t)=>await p("".concat(o.P.GET_ORDERS,"/").concat(e,"/reject"),{method:"PUT",body:JSON.stringify({rejectionMessage:t})}),getOrderChat:async e=>await p("".concat(o.P.GET_ORDERS,"/").concat(e,"/chat"),{method:"GET"}),enableOrderChat:async e=>await p("".concat(o.P.GET_ORDERS,"/").concat(e,"/enable-chat"),{method:"POST"}),getBrandOrders:async()=>await p(o.P.GET_BRAND_ORDERS),getCreatorOrders:async()=>await p(o.P.GET_CREATOR_ORDERS)}}}]);