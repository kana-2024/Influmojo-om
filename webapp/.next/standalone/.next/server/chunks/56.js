"use strict";exports.id=56,exports.ids=[56],exports.modules={7778:(e,a,t)=>{t.d(a,{P:()=>r,V:()=>o});let o={API_BASE_URL:"https://api.influmojo.com",GOOGLE_CLIENT_ID:"your_google_client_id_here",APP_NAME:"Influ Mojo",APP_VERSION:"1.0.0",NODE_ENV:"production",IS_PRODUCTION:!0,IS_DEVELOPMENT:!1},r={LOGIN:`${o.API_BASE_URL}/api/auth/login`,SIGNUP:`${o.API_BASE_URL}/api/auth/signup`,GOOGLE_AUTH:`${o.API_BASE_URL}/api/auth/google`,FACEBOOK_AUTH:`${o.API_BASE_URL}/api/auth/facebook`,SEND_OTP:`${o.API_BASE_URL}/api/auth/send-phone-verification-code`,VERIFY_OTP:`${o.API_BASE_URL}/api/auth/verify-phone-code`,RESEND_OTP:`${o.API_BASE_URL}/api/auth/resend-otp`,LOGOUT:`${o.API_BASE_URL}/api/auth/logout`,UPDATE_NAME:`${o.API_BASE_URL}/api/auth/update-name`,USER_PROFILE:`${o.API_BASE_URL}/api/auth/profile`,CHECK_USER_EXISTS:`${o.API_BASE_URL}/api/auth/check-user-exists`,CREATE_MISSING_PROFILES:`${o.API_BASE_URL}/api/auth/create-missing-profiles`,GET_PROFILE:`${o.API_BASE_URL}/api/profile`,UPDATE_PROFILE:`${o.API_BASE_URL}/api/profile/update`,UPLOAD_IMAGE:`${o.API_BASE_URL}/api/profile/upload-image`,GET_BRAND_PROFILE:`${o.API_BASE_URL}/api/profile/brand-profile`,GET_CREATOR_PROFILE:`${o.API_BASE_URL}/api/profile/creator-profile`,GET_INDUSTRIES:`${o.API_BASE_URL}/api/profile/industries`,UPDATE_BASIC_INFO:`${o.API_BASE_URL}/api/profile/update-basic-info`,UPDATE_PREFERENCES:`${o.API_BASE_URL}/api/profile/update-preferences`,UPDATE_COVER_IMAGE:`${o.API_BASE_URL}/api/profile/update-cover-image`,GET_PACKAGES:`${o.API_BASE_URL}/api/profile/packages`,CREATE_PACKAGE:`${o.API_BASE_URL}/api/profile/create-package`,UPDATE_PACKAGE:`${o.API_BASE_URL}/api/profile/update-package`,DELETE_PACKAGE:`${o.API_BASE_URL}/api/profile/delete-package`,CREATE_PORTFOLIO:`${o.API_BASE_URL}/api/profile/create-portfolio`,CREATE_CAMPAIGN:`${o.API_BASE_URL}/api/profile/create-campaign`,SUBMIT_KYC:`${o.API_BASE_URL}/api/profile/submit-kyc`,CREATE_ORDER:`${o.API_BASE_URL}/api/orders`,GET_ORDERS:`${o.API_BASE_URL}/api/orders`,GET_ORDER_DETAILS:`${o.API_BASE_URL}/api/orders`,CHECKOUT_ORDERS:`${o.API_BASE_URL}/api/orders/checkout`,GET_BRAND_ORDERS:`${o.API_BASE_URL}/api/orders`,GET_CREATOR_ORDERS:`${o.API_BASE_URL}/api/orders`,UPDATE_ORDER_STATUS:`${o.API_BASE_URL}/api/orders/status`,SUBMIT_DELIVERABLES:`${o.API_BASE_URL}/api/orders`,GET_CREATORS:`${o.API_BASE_URL}/api/profile/creators`,GET_CREATOR_PROFILE_BY_ID:`${o.API_BASE_URL}/api/profile/creators`,ADD_TO_CART:`${o.API_BASE_URL}/api/cart/add`,GET_CART:`${o.API_BASE_URL}/api/cart`,REMOVE_FROM_CART:`${o.API_BASE_URL}/api/cart/remove`,UPDATE_CART_ITEM:`${o.API_BASE_URL}/api/cart/update`,GET_TICKET_MESSAGES:`${o.API_BASE_URL}/api/crm/tickets`,SEND_TICKET_MESSAGE:`${o.API_BASE_URL}/api/crm/tickets`,GET_TICKET_BY_ORDER:`${o.API_BASE_URL}/api/crm/tickets/order`,UPDATE_TICKET_STATUS:`${o.API_BASE_URL}/api/crm/tickets`,UPDATE_AGENT_STATUS:`${o.API_BASE_URL}/api/crm/agent/status`,GET_AGENT_STATUS:`${o.API_BASE_URL}/api/crm/tickets`}},2056:(e,a,t)=>{t.d(a,{$8:()=>E,authAPI:()=>P,ordersAPI:()=>u,profileAPI:()=>A,ts:()=>l});var o=t(7778);let r=e=>{if("string"!=typeof e)return!1;try{let a=JSON.parse(e);return"object"==typeof a||Array.isArray(a)}catch(e){return!1}},i=(e,a=null)=>{if(!e)return a;if("object"==typeof e&&null!==e)return e;if(!r(e))return a;try{return JSON.parse(e)}catch(t){return console.warn("Failed to parse JSON:",e),a}},s=()=>null,n=e=>{},c=()=>{},_=()=>!1,E=()=>_(),l=()=>null,d=async(e,a={})=>{if(!_())throw Error("Authentication token is invalid or expired. Please sign in again.");let t=s(),o={"Content-Type":"application/json",...t&&{Authorization:`Bearer ${t}`}},r={...a,headers:{...o,...a.headers}};try{let a;let t=await fetch(e,r),o=t.headers.get("content-type"),i=await t.text();if(o&&o.includes("application/json"))try{a=JSON.parse(i)}catch(e){throw console.error("[apiService] JSON parse error:",e),Error(`Invalid JSON response: ${i.substring(0,100)}`)}else throw Error(`Non-JSON response: ${i.substring(0,100)}`);if(401===t.status||403===t.status)throw console.error("[apiService] Authentication error:",t.status,a),c(),Error(`Authentication failed: ${a.message||"Unauthorized"}`);if(!t.ok)throw Error(a.message||`HTTP error! status: ${t.status}`);return a}catch(e){if(console.error("[apiService] Request failed:",e),e instanceof TypeError&&e.message.includes("fetch"))throw console.error("[apiService] Network error - backend may be unavailable"),Error("Network error: Unable to connect to the server. Please check your internet connection and try again.");throw e}},P={login:async(e,a)=>{let t=await d(o.P.LOGIN,{method:"POST",body:JSON.stringify({email:e,password:a})});return t.token&&n(t.token),t},signup:async e=>{let a=await d(o.P.SIGNUP,{method:"POST",body:JSON.stringify(e)});return a.token&&n(a.token),a},googleAuth:async(e,a=!1,t="creator")=>{console.log("\uD83D\uDD04 Google auth API called with:",{isSignup:a,userType:t}),console.log("\uD83D\uDD11 ID token preview:",e.substring(0,50)+"...");try{let r={idToken:e,isSignup:a,userType:t};console.log("\uD83D\uDCE4 Request body:",r),console.log("\uD83C\uDF10 API endpoint:",o.P.GOOGLE_AUTH);let i=await fetch(o.P.GOOGLE_AUTH,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(r)});if(console.log("\uD83D\uDD0D Google auth response status:",i.status),console.log("\uD83D\uDD0D Google auth response headers:",i.headers),!i.ok){let e=await i.json().catch(()=>({}));throw console.error("❌ Google auth failed:",e),Error(e.message||`HTTP error! status: ${i.status}`)}let s=await i.json();if(console.log("✅ Google auth successful:",s),s.token){console.log("\uD83D\uDD11 Storing JWT token from Google auth"),n(s.token);let e=localStorage.getItem("token");console.log("\uD83D\uDD0D Token stored successfully:",e?"Yes":"No")}else console.warn("⚠️ No token received in Google auth response");return s}catch(e){throw console.error("❌ Google auth request failed:",e),e}},sendOTP:async e=>await d(o.P.SEND_OTP,{method:"POST",body:JSON.stringify({phone:e})}),verifyOTP:async(e,a,t,r="creator")=>{let i=await d(o.P.VERIFY_OTP,{method:"POST",body:JSON.stringify({phone:e,code:a,fullName:t,userType:r})});if(i.token){console.log("\uD83D\uDD11 Storing token in localStorage:",i.token.substring(0,20)+"..."),n(i.token);let e=localStorage.getItem("token");console.log("\uD83D\uDD0D Token stored successfully:",e?"Yes":"No"),e&&console.log("\uD83D\uDD0D Stored token preview:",e.substring(0,20)+"...")}else console.warn("⚠️ No token received in OTP verification response");return i},checkUserExists:async e=>await d(o.P.CHECK_USER_EXISTS,{method:"POST",body:JSON.stringify({phone:e})}),logout:async()=>{try{await d(o.P.LOGOUT,{method:"POST"})}catch(e){console.error("Logout error:",e)}finally{c()}},getProfile:async()=>await d(o.P.USER_PROFILE),getUserProfile:async()=>await d(o.P.USER_PROFILE),createMissingProfiles:async()=>{console.log("\uD83D\uDD04 createMissingProfiles called");let e=localStorage.getItem("token");return console.log("\uD83D\uDD0D Token available for createMissingProfiles:",e?"Yes":"No"),e&&console.log("\uD83D\uDD0D Token preview:",e.substring(0,20)+"..."),await d(o.P.CREATE_MISSING_PROFILES,{method:"POST"})}},A={getProfile:async()=>await d(o.P.GET_PROFILE,{method:"GET"}),getCreatorProfile:async()=>{let e=await d(o.P.GET_CREATOR_PROFILE,{method:"GET"});return e.success&&e.data&&(e.data.languages=i(e.data.languages,[]),e.data.content_categories=i(e.data.content_categories,[]),e.data.social_media_accounts=i(e.data.social_media_accounts,[]),e.data.portfolio_items=i(e.data.portfolio_items,[])),e},getBrandProfile:async()=>{let e=await d(`${o.P.GET_BRAND_PROFILE}?_t=${Date.now()}`,{method:"GET"});return e.success&&e.data&&(e.data.industries=i(e.data.industries,[]),e.data.languages=i(e.data.languages,[]),e.data.campaigns=i(e.data.campaigns,[]),e.data.collaborations=i(e.data.collaborations,[]),e.data.portfolio_items=i(e.data.portfolio_items,[])),e},getCreators:async()=>{let e=await d(o.P.GET_CREATORS,{method:"GET"});return e.success&&e.data&&Object.keys(e.data).forEach(a=>{e.data[a]&&Array.isArray(e.data[a])&&e.data[a].forEach(e=>{e.languages=i(e.languages,[]),e.content_categories=i(e.content_categories,[]),e.social_media_accounts=i(e.social_media_accounts,[]),e.portfolio_items=i(e.portfolio_items,[])})}),e},getPublicCreators:async()=>{try{let e;let a=await fetch(o.P.GET_CREATORS,{method:"GET",headers:{"Content-Type":"application/json"}}),t=a.headers.get("content-type"),r=await a.text();if(t&&t.includes("application/json"))try{e=JSON.parse(r)}catch(e){throw console.error("[apiService] JSON parse error:",e),Error(`Invalid JSON response: ${r.substring(0,100)}`)}else throw Error(`Non-JSON response: ${r.substring(0,100)}`);if(!a.ok)throw Error(e.message||`HTTP error! status: ${a.status}`);return e.success&&e.data&&Object.keys(e.data).forEach(a=>{e.data[a]&&Array.isArray(e.data[a])&&e.data[a].forEach(e=>{e.languages=i(e.languages,[]),e.content_categories=i(e.content_categories,[]),e.social_media_accounts=i(e.social_media_accounts,[]),e.portfolio_items=i(e.portfolio_items,[])})}),e}catch(e){throw console.error("[apiService] Public creators request failed:",e),e}},getCreatorProfileById:async(e,a)=>{let t=a?`${o.P.GET_CREATOR_PROFILE_BY_ID}/${a}/${e}`:`${o.P.GET_CREATOR_PROFILE_BY_ID}/${e}`,r=await d(t,{method:"GET"});return r.success&&r.data&&(r.data.languages=i(r.data.languages,[]),r.data.content_categories=i(r.data.content_categories,[]),r.data.social_media_accounts=i(r.data.social_media_accounts,[]),r.data.portfolio_items=i(r.data.portfolio_items,[])),r},getPublicCreatorProfileById:async e=>{try{let a;let t=`${o.P.GET_CREATOR_PROFILE_BY_ID}/${e}`,r=await fetch(t,{method:"GET",headers:{"Content-Type":"application/json"}}),s=r.headers.get("content-type"),n=await r.text();if(s&&s.includes("application/json"))try{a=JSON.parse(n)}catch(e){throw console.error("[apiService] JSON parse error:",e),Error(`Invalid JSON response: ${n.substring(0,100)}`)}else throw Error(`Non-JSON response: ${n.substring(0,100)}`);if(!r.ok)throw Error(a.message||`HTTP error! status: ${r.status}`);return a.success&&a.data&&(a.data.languages=i(a.data.languages,[]),a.data.content_categories=i(a.data.content_categories,[]),a.data.social_media_accounts=i(a.data.social_media_accounts,[]),a.data.portfolio_items=i(a.data.portfolio_items,[])),a}catch(e){throw console.error("[apiService] Public creator profile request failed:",e),e}},updateProfile:async e=>await d(o.P.UPDATE_PROFILE,{method:"PUT",body:JSON.stringify(e)}),addToCart:async(e,a,t=1)=>await d(o.P.ADD_TO_CART,{method:"POST",body:JSON.stringify({package_id:e,creator_id:a,quantity:t})}),getCart:async()=>await d(o.P.GET_CART),removeFromCart:async e=>await d(o.P.REMOVE_FROM_CART,{method:"DELETE",body:JSON.stringify({cart_item_id:e})}),updateCartItemQuantity:async(e,a)=>await d(o.P.UPDATE_CART_ITEM,{method:"PUT",body:JSON.stringify({cart_item_id:e,quantity:a})}),getPackages:async()=>await d(o.P.GET_PACKAGES,{method:"GET"}),createPackage:async e=>await d(o.P.CREATE_PACKAGE,{method:"POST",body:JSON.stringify(e)}),updatePackage:async(e,a)=>{let t={id:e,...a};return await d(o.P.UPDATE_PACKAGE,{method:"PUT",body:JSON.stringify(t)})},deletePackage:async e=>await d(`${o.P.DELETE_PACKAGE}/${e}`,{method:"DELETE"}),createPortfolio:async e=>await d(o.P.CREATE_PORTFOLIO,{method:"POST",body:JSON.stringify(e)}),createCampaign:async e=>await d(o.P.CREATE_CAMPAIGN,{method:"POST",body:JSON.stringify(e)}),submitKYC:async e=>await d(o.P.SUBMIT_KYC,{method:"POST",body:JSON.stringify(e)}),updateBasicInfo:async e=>await d(o.P.UPDATE_BASIC_INFO,{method:"POST",body:JSON.stringify(e)}),updatePreferences:async e=>await d(o.P.UPDATE_PREFERENCES,{method:"POST",body:JSON.stringify(e)}),getIndustries:async()=>await d(o.P.GET_INDUSTRIES,{method:"GET"})},u={getOrders:async()=>await d(o.P.GET_ORDERS,{method:"GET"}),getOrderDetails:async e=>await d(`${o.P.GET_ORDER_DETAILS}/${e}`,{method:"GET"}),checkoutOrders:async e=>await d(o.P.CHECKOUT_ORDERS,{method:"POST",body:JSON.stringify({cartItems:e})}),submitDeliverables:async(e,a)=>await d(`${o.P.GET_ORDERS}/${e}/deliverables`,{method:"POST",body:JSON.stringify({deliverables:a})}),acceptOrder:async e=>{if(!e||"undefined"===e||"null"===e)throw Error("Invalid order ID provided");try{let a=await d(`${o.P.GET_ORDERS}/${e}/accept`,{method:"PUT"});if(!a.success)throw Error(a.message||"Failed to accept order");return a}catch(e){throw console.error("[apiService] Error accepting order:",e),Error(e&&"object"==typeof e&&"message"in e?String(e.message):"Failed to accept order. Please try again.")}},rejectOrder:async(e,a)=>await d(`${o.P.GET_ORDERS}/${e}/reject`,{method:"PUT",body:JSON.stringify({rejectionMessage:a})}),getOrderChat:async e=>await d(`${o.P.GET_ORDERS}/${e}/chat`,{method:"GET"}),enableOrderChat:async e=>await d(`${o.P.GET_ORDERS}/${e}/enable-chat`,{method:"POST"}),getBrandOrders:async()=>await d(o.P.GET_BRAND_ORDERS),getCreatorOrders:async()=>await d(o.P.GET_CREATOR_ORDERS)}}};