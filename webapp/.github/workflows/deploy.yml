name: Deploy Webapp

on:
  push:
    branches: [ new-feature-branch ]
  workflow_dispatch:

env:
  AWS_REGION: ap-south-1
  INSTANCE_ID: i-0b338206ea637e1b4
  S3_BUCKET: influmojo-deployments

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: webapp/package-lock.json

      - name: Install dependencies
        working-directory: webapp
        run: npm ci --no-audit --no-fund

      - name: Build (standalone, flattened)
        working-directory: webapp
        env:
          NEXT_PUBLIC_API_URL: /api
          NODE_OPTIONS: --max_old_space_size=1024
        run: |
          echo "🔨 Building webapp..."
          node -v && npm -v
          npm run build

          echo "📦 Packaging flattened standalone output..."
          rm -rf package && mkdir -p package/.next/static

          # FLATTEN the standalone runtime (puts server.js at package/server.js)
          cp -R .next/standalone/* package/

          # Provide Next runtime bits
          cp -R .next/static/* package/.next/static/
          cp .next/BUILD_ID package/.next/BUILD_ID

          # Optional: ship public assets
          if [ -d "public" ]; then cp -R public package/public; fi

          # Sanity check: server.js must exist
          test -f package/server.js || { echo "server.js missing in package"; ls -la package; exit 1; }

          echo "🗜️ Creating zip..."
          (cd package && zip -qr ../webapp-${GITHUB_SHA}.zip .)
          ls -lh webapp-${GITHUB_SHA}.zip

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::424592696132:role/GitHubActionsRole
          aws-region: ${{ env.AWS_REGION }}

      - name: Upload artifact to S3
        run: |
          echo "☁️ Uploading to S3..."
          aws s3 cp webapp/webapp-${GITHUB_SHA}.zip s3://${{ env.S3_BUCKET }}/releases/
          echo "✅ Uploaded: s3://${{ env.S3_BUCKET }}/releases/webapp-${GITHUB_SHA}.zip"

      - name: Deploy to EC2 via SSM
        run: |
          echo "🚀 Deploying to EC2..."
          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --instance-ids "${{ env.INSTANCE_ID }}" \
            --comment "Deploy webapp ${GITHUB_SHA}" \
            --parameters '{
              "commands": [
                "set -euo pipefail",
                "REL=\"'$GITHUB_SHA'\"",
                "ZIP=\"/tmp/webapp-'$GITHUB_SHA'.zip\"",
                "echo \"📦 Downloading release $REL\"",
                "aws s3 cp s3://'${{ env.S3_BUCKET }}'/releases/webapp-$REL.zip $ZIP",
                "sudo mkdir -p /opt/influmojo/releases/$REL /opt/influmojo/current",
                "echo \"📁 Extracting...\"",
                "sudo unzip -qo $ZIP -d /opt/influmojo/releases/$REL",
                "sudo ln -sfn /opt/influmojo/releases/$REL /opt/influmojo/current",
                "cd /opt/influmojo/current",
                "echo \"🧪 Post-extract check:\"",
                "ls -la | sed -n '1,50p'",
                "test -f server.js || { echo \"❌ server.js missing in /opt/influmojo/current\"; exit 1; }",

                "echo \"🔄 Restarting webapp via PM2 (entry=server.js)\"",
                "sudo -iu ssm-user bash -lc \"pm2 delete webapp >/dev/null 2>&1 || true\"",
                "sudo -iu ssm-user bash -lc \"NODE_ENV=production PORT=3000 HOST=0.0.0.0 pm2 start \\\"$(which node)\\\" --name webapp --cwd /opt/influmojo/current -- server.js\"",
                "sudo -iu ssm-user bash -lc \"pm2 save\"",

                "echo \"🔍 Health check\"",
                "ss -ltnp | egrep \\":3000|:3002\\" || true",
                "curl -sS -I http://127.0.0.1:3000/ || true",
                "sudo -iu ssm-user bash -lc \"pm2 logs webapp --lines 60 --timestamp --nostream || true\"",

                "rm -f $ZIP",
                "echo \"✅ Deploy done\""
              ]
            }' \
            --output text

          echo "⏳ Give the process a few seconds to bind port 3000..."
          sleep 8
          echo "✅ Command sent."

      - name: Deployment Summary
        run: |
          echo "🎉 Deployment completed!"
          echo "📦 Package: webapp-${GITHUB_SHA}.zip"
          echo "🌐 ALB: http://influmojo-alb-1717302406.ap-south-1.elb.amazonaws.com/"
          echo "📋 Commit: ${GITHUB_SHA}"
          echo "🔀 Branch: ${GITHUB_REF_NAME}"
